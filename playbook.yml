---
- name: Master and slave requirements
  hosts: masters, slave
  vars_files: 
    - roles/docker/vars/default.yml
    - group_vars/masters.yml
    - group_vars/slave.yml
    - roles/user-system/vars/default.yml
  pre_tasks:
    - name: Is alive
      ping:
  roles:
    - { role: user-system, tags: ["ubuntu"]}
    - { role: upgrades, tags: ["os_upgrade"]}
    - { role: dependencies, tags: ["python", "transport_layer"] }
    - { role: docker, become: true, become_methods: sudo  ,tags: ["docker"]}
    - { role: kubernetes, become: true, become_methods: sudo, tags: ["latest"]}

  

#- name: install kubelet on master
 # hosts: masters
 # vars_files:
 #   - group_vars/masters.yml
 # become: yes
 # tasks:
 #  - name: install kubectl
     #apt:
  #     name: kubectl
      # state: present
      # force: yes


- name: Initiate kubernetes master
  hosts: masters
  vars_files:
    - group_vars/masters.yml
    - roles/master/vars/default.yml
  roles:
    - { role: master, tags: ["calicio"]}

- name: Get token
  vars_files: 
    - group_vars/masters.yml
  hosts: masters
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"


- name: Join cluster
  vars_files: 
    - group_vars/slave.yml
  hosts: slave
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['masters'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt